# Copyright 2021 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions Coherence Certification build.
# ---------------------------------------------------------------------------
name: Coherence Certification

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches-ignore:
    - gh-pages
  pull_request:
    types:
      - opened
      - committed
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x

env:
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  RELEASE_IMAGE_PREFIX: "localhost:5000/"
  LOAD_KIND: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        coherenceGid:
          - "com.oracle.coherence.ce:coherence:21.06-SNAPSHOT"
          - "com.oracle.coherence.ce:coherence:20.12.1-SNAPSHOT"
          - "com.oracle.coherence.ce:coherence:14.1.1-0-4-SNAPSHOT"
          - "com.oracle.coherence.ce:coherence:20.12"
          - "com.oracle.coherence.ce:coherence:20.06"
          - "com.oracle.coherence.ce:coherence:14.1.1-0-3"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Cache Go Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.x

    - name: Start KinD Cluster
      shell: bash
      run: |
        sh ./hack/kind.sh
        kubectl version
        kubectl get nodes
        docker pull gcr.io/distroless/java

    - name: Coherence Certification Tests
      shell: bash
      run: |
        export COHERENCE_GID=${{ matrix.coherenceGid }}
        ./hack/coherence-certification.sh

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
