# Copyright 2019 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions CI build.
# ---------------------------------------------------------------------------
name: Operator CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

env:
  OCR_DOCKER_USERNAME: ${{ secrets.OCR_DOCKER_USERNAME }}
  OCR_DOCKER_PASSWORD: ${{ secrets.OCR_DOCKER_PASSWORD }}
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  RELEASE_IMAGE_PREFIX: "localhost:5000/"
  TEST_MANIFEST_VALUES: "deploy/oci-values.yaml"
  COHERENCE_IMAGE: "container-registry.oracle.com/middleware/coherence:12.2.1.4.0"

jobs:
  build:
    runs-on: ubuntu-latest

#   Checkout the source, we need a depth of zero to fetch all of the history otherwise
#   the copyright check cannot work out the date of the files from Git.
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Cache Go Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v2-beta
      with:
        go-version: 1.13.x

    - name: Docker Login OCR
      run: |
        echo $OCR_DOCKER_PASSWORD | docker login container-registry.oracle.com -u $OCR_DOCKER_USERNAME --password-stdin

    - name: Start KinD Cluster
#     Start a KinD K8s cluster with single worker node
      shell: bash
      run: |
        sh ./hack/kind.sh --image kindest/node:v1.16.9@sha256:7175872357bc85847ec4b1aba46ed1d12fa054c83ac7a8a11f5c268957fd5765
        kubectl version
        kubectl get nodes
        docker pull gcr.io/distroless/java
        docker pull docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        docker pull docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        docker pull docker.elastic.co/kibana/kibana:7.6.2
        docker pull grafana/grafana:6.7.3
        docker pull quay.io/coreos/kube-state-metrics:v1.9.5
        docker pull quay.io/coreos/configmap-reload:v0.0.1
        docker pull quay.io/coreos/prometheus-config-reloader:v0.38.1
        docker pull quay.io/prometheus/node-exporter:v0.18.1
        docker pull quay.io/coreos/prometheus-operator:v0.38.1
        docker pull quay.io/prometheus/prometheus:v2.16.0
        docker pull quay.io/prometheus/prometheus:v2.17.2
        docker pull jettech/kube-webhook-certgen:v1.2.0
        docker pull squareup/ghostunnel:v1.5.2
        docker pull kiwigrid/k8s-sidecar:0.1.99
        docker pull $COHERENCE_IMAGE
        kind load docker-image --name operator $COHERENCE_IMAGE
        kind load docker-image --name operator docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        kind load docker-image --name operator docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        kind load docker-image --name operator docker.elastic.co/kibana/kibana:7.6.2
        kind load docker-image --name operator grafana/grafana:6.7.3
        kind load docker-image --name operator quay.io/coreos/kube-state-metrics:v1.9.5
        kind load docker-image --name operator quay.io/coreos/configmap-reload:v0.0.1
        kind load docker-image --name operator quay.io/coreos/prometheus-config-reloader:v0.38.1
        kind load docker-image --name operator quay.io/prometheus/node-exporter:v0.18.1
        kind load docker-image --name operator quay.io/coreos/prometheus-operator:v0.38.1
        kind load docker-image --name operator quay.io/prometheus/prometheus:v2.16.0
        kind load docker-image --name operator quay.io/prometheus/prometheus:v2.17.2
        kind load docker-image --name operator jettech/kube-webhook-certgen:v1.2.0
        kind load docker-image --name operator squareup/ghostunnel:v1.5.2
        kind load docker-image --name operator kiwigrid/k8s-sidecar:0.1.99

    - name: Code Review
      shell: bash
      run: make code-review MAVEN_SETTINGS=.github/maven/synoki.xml MAVEN_USER=$MAVEN_USER MAVEN_PASSWORD=$MAVEN_PASSWORD

    - name: Build
      shell: bash
      run: make all MAVEN_SETTINGS=.github/maven/synoki.xml MAVEN_USER=$MAVEN_USER MAVEN_PASSWORD=$MAVEN_PASSWORD

    - name: Push Images
#     Push the images just built to the local Docker registry localhost:5000 started with KinD cluster
      shell: bash
      run: make push-all-images

    - name: Unit Tests
      shell: bash
      run: make test-all MAVEN_SETTINGS=.github/maven/synoki.xml MAVEN_USER=$MAVEN_USER MAVEN_PASSWORD=$MAVEN_PASSWORD

    - name: E2E Local Tests
      shell: bash
      run: |
        make e2e-local-test
        make script-test

    - name: E2E Remote Tests
      shell: bash
      run: make e2e-test

    - name: E2E Elasticsearch Tests
      shell: bash
      run: |
        make e2e-elastic-test

    - name: E2E Prometheus Tests
      shell: bash
      run: |
        make e2e-prometheus-test

#    - name: Compatibility Tests
#      shell: bash
#      run: make compatibility-test

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
